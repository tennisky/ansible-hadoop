#####
#
# settings_for_linux/tasks/main.yml
#
#####

---
- name: Include vars of all.yml
  include_vars:
    file: all.yml

- name: Loading OS types
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - "all.yml"
      paths:
        - ../vars

#- name: Change password of root
#  user:
#    name: root
#    password: "{{ root_password | password_hash('sha512') }}"

- name: Permit ssh as root user
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^#PermitRootLogin\s.*$'
    replace: PermitRootLogin yes

- name: Add hostname to /etc/sysconfig/network
  lineinfile:
    path: /etc/sysconfig/network
    line: HOSTNAME={{ ansible_fqdn }}

- name: Install packages
  package:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ packages }}"

#- name: Install Java
#  include_tasks: java.yml
#  when: java != "embedded"

- name: Change mode of postgresql-jdbc.jar
  file:
    path: /usr/share/java/postgresql-jdbc.jar
    state: file
    mode: '0644'

- name: Make sure the NTP service is started
  service:
    name: "{{ ntp_service_name }}"
    state: started

- name: Make sure the NTP service is enabled
  service:
    name: "{{ ntp_service_name }}"
    enabled: yes
  ignore_errors: true

- name: Add mappings to /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: "^{{ hostvars[item]['ansible_'~hostvars[item].ansible_default_ipv4.alias | regex_replace('-','_')]['ipv4']['address'] }}.*"
    line: "{{ hostvars[item]['ansible_'~hostvars[item].ansible_default_ipv4.alias | regex_replace('-','_')]['ipv4']['address'] }} {{ hostvars[item]['ansible_nodename'] }}"
    insertafter: "^127..*$"
    state: present
  with_items:
    - "{{ ansible_play_hosts|sort(reverse=True) }}"
#  when: not external_dns

- name: Make sure /etc/security/limits.d exists
  file:
    path: /etc/security/limits.d
    mode: '0755'
    state: directory

- name: Set nofile and nproc limits
  blockinfile:
    path: /etc/security/limits.d/99-hadoop.conf
    create: yes
    mode: '0644'
    block: |
      * soft nofile 32768
      * hard nofile 32768
      * soft nproc 32768
      * hard nproc 32768
      root       soft    nproc     unlimited
      ams        -       nofile   64000
      atlas      -       nofile   64000
      druid      -       nofile   64000
      hive       -       nofile   64000
      infra-solr -       nofile   64000
      kms        -       nofile   64000
      knox       -       nofile   64000
      logsearch  -       nofile   64000
      ranger     -       nofile   64000
      spark      -       nofile   64000
      zeppelin   -       nofile   64000
      zookeeper  -       nofile   64000
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- block:
    - name: Stop the firewall service
      service:
        name: "{{ firewall_service_name }}"
        state: stopped
      ignore_errors: true

    - name: Disable the firewall service
      service:
        name: "{{ firewall_service_name }}"
        enabled: no
      ignore_errors: true

- name: Add hostname to /etc/profile
  lineinfile:
    path: /etc/profile
    line: umask 0022

- name: Set timezone to "{{ timezone }}"
  timezone:
    name: "{{ timezone }}"

- name: Configure tuned (RHEL/CentOS 7) # Tuning of OS parameters
  include_tasks: tuned.yml
  when: ansible_os_family|lower == "redhat" and ansible_distribution_major_version|int == 7 and is_vm_docker_containers != "yes"

  - name: Disable selinux
    selinux:
      state: disabled
    notify:
      - System reboot
      - Keep waiting for reboot
#  when: ansible_os_family|lower == "redhat" and ansible_distribution|lower != "amazon" and is_vm_docker_containers != "yes"
